var Hotel = {
    initialize: function (name, capacity) {
        this.name = name;
        this.rooms = [];
        this.capacity = capacity;
    },

        //TODO: adds room to hotel. If capacity is full, do not add and show message
	addRoom: function(room) {
			if(this.rooms.length < this.capacity) {
                this.rooms.push(room);
                //$("#hotel").append(newRoom);
			} else {
			console.log("You can not add more rooms!"); 
        };
    },

    removeRoom: function () {
        //TODO: remove room and its animal  
		
    },
    numOccupiedRooms: function() {
        return this.rooms.length;
    },
    numFreeRooms: function() {
        var rooms = this.capacity - this.numOccupiedRooms();
        return rooms;
    },
    render: function() {
        if(this.rooms.length > 0) {
            for(var i = 0; i < this.rooms.length; i++) {
                $("#hotel").append(this.rooms[i].render());
            }
        }
    }
};

var Room = {
    initialize: function (occupied, roomer) {
        this.occupied = occupied;
        this.roomer = roomer;
    },

    addRoomer: function () {
        //TODO: add animal if room is free
    },

    removeRoomer: function () {
        //TODO: remove animal if room is occupied
    },
    render: function() {
        var room = $("<div></div");
        room.attr('class', 'room');
        room.append(this.roomer.portrait());
        return room;
    }
};

var Animal = {
    initialize: function (name, age, health, hunger) {
        this.name = name;
        this.age = age;
        this.health = health;
        this.hunger = hunger;
    }
};

var Cat = Animal.extend({
    initialize: function (name, age, health, hunger, mood, image) {
        this._super = Object.create(this._super);
        this._super.initialize(name, age, health, hunger);
        this.mood = mood;
        this.image = image;
    },

    feed: function () {
        //TODO:
		
    },

    goDoctor: function () {
        //TODO:
    },

    goWalk: function () {
        //TODO:
    },

    introduce: function() {
        return this._super.name; // for testing purposes
    },
    portrait: function() {
        var img = $("<img>");
        img.attr('src', this.image);
        img.attr('alt', this._super.name);
        return img;
    }
});

// sample test, before we learn js unit testing
var grumpy = Object.create(Cat);
grumpy.initialize("Grumpy", 3, 7, 100, 100, "images/grumpy.jpg");

var room13 = Object.create(Room);
room13.initialize(true, grumpy);

console.log(grumpy.introduce());

// One more cat
var pummy = Object.create(Cat);
pummy.initialize("pummy", 9, 7, 100, 100, "images/pummy.png");

var room23 = Object.create(Room);
room23.initialize(true, pummy);

console.log(pummy.introduce());

// Catwoman
var catwoman = Object.create(Cat);
catwoman.initialize("catwoman", 4, 7, 100, 100, "images/catwoman.png");

var room43 = Object.create(Room);
room43.initialize(true, catwoman);

console.log(catwoman.introduce());

// Hercule cat 

var hercule = Object.create(Cat);
hercule.initialize("hercule", 6, 6, 100, 100, "images/hercule.png");

var room33 = Object.create(Room);
room33.initialize(true, hercule);


var sanMarino = Object.create(Hotel);
sanMarino.initialize("San Marino", 6);
sanMarino.addRoom(room33);
sanMarino.addRoom(room43);
sanMarino.addRoom(room23);
sanMarino.addRoom(room13);

console.log(hercule.introduce());

console.log("occupied: " + sanMarino.numOccupiedRooms());
console.log("free: " + sanMarino.numFreeRooms());

sanMarino.render();